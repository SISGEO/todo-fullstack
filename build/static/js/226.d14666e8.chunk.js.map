{"version":3,"file":"static/js/226.d14666e8.chunk.js","mappings":"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","sources":["pages/Dashboard/index.tsx","services/checklistService.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { checklistService } from '../../services/checklistService';\r\nimport { ChecklistStats } from '../../types/checklist';\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [stats, setStats] = useState<ChecklistStats>({\r\n    total: 0,\r\n    completed: 0,\r\n    pending: 0,\r\n    nonCompliant: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadStats = async () => {\r\n      try {\r\n        // Por enquanto, vamos usar um ID fixo para demonstração\r\n        const projectStats = await checklistService.getStats('1');\r\n        setStats(projectStats);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar estatísticas:', error);\r\n      }\r\n    };\r\n\r\n    loadStats();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow\">\r\n        <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8 flex justify-between items-center\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Dashboard</h1>\r\n          <p className=\"text-sm text-gray-600\">\r\n            Bem-vindo, {user?.name}!\r\n          </p>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main>\r\n        <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n          {/* Cards Grid */}\r\n          <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4\">\r\n            {/* Total de Checklists */}\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <svg className=\"h-6 w-6 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">\r\n                        Total de Checklists\r\n                      </dt>\r\n                      <dd className=\"text-3xl font-semibold text-gray-900\">\r\n                        {stats.total}\r\n                      </dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Concluídos */}\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <svg className=\"h-6 w-6 text-green-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">\r\n                        Concluídos\r\n                      </dt>\r\n                      <dd className=\"text-3xl font-semibold text-gray-900\">\r\n                        {stats.completed}\r\n                      </dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Pendentes */}\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <svg className=\"h-6 w-6 text-yellow-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">\r\n                        Pendentes\r\n                      </dt>\r\n                      <dd className=\"text-3xl font-semibold text-gray-900\">\r\n                        {stats.pending}\r\n                      </dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Não Conformes */}\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <svg className=\"h-6 w-6 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">\r\n                        Não Conformes\r\n                      </dt>\r\n                      <dd className=\"text-3xl font-semibold text-gray-900\">\r\n                        {stats.nonCompliant}\r\n                      </dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; ","import { Checklist, ChecklistItem, Project, ChecklistTemplate, ChecklistStats } from '../types/checklist';\r\n\r\n// Simulando um banco de dados em memória\r\nconst checklists: Checklist[] = [];\r\nconst projects: Project[] = [];\r\nconst templates: ChecklistTemplate[] = [];\r\n\r\nexport const checklistService = {\r\n  // Projetos\r\n  async createProject(project: Omit<Project, 'id'>): Promise<Project> {\r\n    const newProject = { ...project, id: Math.random().toString() };\r\n    projects.push(newProject);\r\n    return newProject;\r\n  },\r\n\r\n  async getProjects(companyId: string): Promise<Project[]> {\r\n    return projects.filter(p => p.companyId === companyId);\r\n  },\r\n\r\n  async updateProject(id: string, data: Partial<Project>): Promise<Project> {\r\n    const index = projects.findIndex(p => p.id === id);\r\n    if (index === -1) throw new Error('Projeto não encontrado');\r\n    \r\n    projects[index] = { ...projects[index], ...data };\r\n    return projects[index];\r\n  },\r\n\r\n  // Checklists\r\n  async createChecklist(checklist: Omit<Checklist, 'id'>): Promise<Checklist> {\r\n    const newChecklist = { ...checklist, id: Math.random().toString() };\r\n    checklists.push(newChecklist);\r\n    return newChecklist;\r\n  },\r\n\r\n  async getChecklists(projectId: string): Promise<Checklist[]> {\r\n    return checklists.filter(c => c.projectId === projectId);\r\n  },\r\n\r\n  async updateChecklist(id: string, data: Partial<Checklist>): Promise<Checklist> {\r\n    const index = checklists.findIndex(c => c.id === id);\r\n    if (index === -1) throw new Error('Checklist não encontrado');\r\n    \r\n    checklists[index] = { ...checklists[index], ...data };\r\n    return checklists[index];\r\n  },\r\n\r\n  async updateChecklistItem(\r\n    checklistId: string,\r\n    itemId: string,\r\n    data: Partial<ChecklistItem>\r\n  ): Promise<ChecklistItem> {\r\n    const checklist = checklists.find(c => c.id === checklistId);\r\n    if (!checklist) throw new Error('Checklist não encontrado');\r\n\r\n    const itemIndex = checklist.items.findIndex(i => i.id === itemId);\r\n    if (itemIndex === -1) throw new Error('Item não encontrado');\r\n\r\n    checklist.items[itemIndex] = { ...checklist.items[itemIndex], ...data };\r\n    return checklist.items[itemIndex];\r\n  },\r\n\r\n  // Templates\r\n  async createTemplate(template: Omit<ChecklistTemplate, 'id'>): Promise<ChecklistTemplate> {\r\n    const newTemplate = { ...template, id: Math.random().toString() };\r\n    templates.push(newTemplate);\r\n    return newTemplate;\r\n  },\r\n\r\n  async getTemplates(companyId: string): Promise<ChecklistTemplate[]> {\r\n    return templates.filter(t => t.companyId === companyId);\r\n  },\r\n\r\n  // Estatísticas\r\n  async getStats(projectId: string): Promise<ChecklistStats> {\r\n    const projectChecklists = checklists.filter(c => c.projectId === projectId);\r\n    \r\n    return {\r\n      total: projectChecklists.length,\r\n      completed: projectChecklists.filter(c => c.status === 'completed').length,\r\n      pending: projectChecklists.filter(c => c.status === 'pending').length,\r\n      nonCompliant: projectChecklists.filter(c => c.status === 'non_compliant').length,\r\n    };\r\n  },\r\n}; "],"names":["Dashboard","user","useAuth","stats","setStats","useState","total","completed","pending","nonCompliant","useEffect","async","projectStats","checklistService","getStats","error","console","loadStats","_jsxs","className","children","_jsx","name","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","checklists","projects","templates","createProject","project","newProject","id","Math","random","toString","push","getProjects","companyId","filter","p","updateProject","data","index","findIndex","Error","createChecklist","checklist","newChecklist","getChecklists","projectId","c","updateChecklist","updateChecklistItem","checklistId","itemId","find","itemIndex","items","i","createTemplate","template","newTemplate","getTemplates","t","projectChecklists","length","status"],"sourceRoot":""}