{"version":3,"file":"static/js/782.c5a218a6.chunk.js","mappings":"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","sources":["pages/RegisterCompany/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface RegisterCompanyForm {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n  licenseType: 'basic' | 'premium' | 'enterprise';\r\n}\r\n\r\nconst RegisterCompany: React.FC = () => {\r\n  const { registerCompany } = useAuth();\r\n  const navigate = useNavigate();\r\n  const { register, handleSubmit, formState: { errors }, watch } = useForm<RegisterCompanyForm>({\r\n    defaultValues: {\r\n      licenseType: 'basic',\r\n    },\r\n  });\r\n\r\n  const onSubmit = async (data: RegisterCompanyForm) => {\r\n    try {\r\n      if (data.password !== data.confirmPassword) {\r\n        toast.error('As senhas não coincidem');\r\n        return;\r\n      }\r\n\r\n      await registerCompany({\r\n        name: data.name,\r\n        email: data.email,\r\n        password: data.password,\r\n        licenseType: data.licenseType,\r\n      });\r\n\r\n      toast.success('Empresa registrada com sucesso!');\r\n      navigate('/login');\r\n    } catch (error) {\r\n      toast.error('Erro ao registrar empresa');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Registrar Empresa\r\n          </h2>\r\n        </div>\r\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label htmlFor=\"name\" className=\"sr-only\">\r\n                Nome da Empresa\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                {...register('name', { required: 'Nome é obrigatório' })}\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Nome da Empresa\"\r\n              />\r\n              {errors.name && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.name.message}</p>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"sr-only\">\r\n                Email\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                {...register('email', {\r\n                  required: 'Email é obrigatório',\r\n                  pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                    message: 'Email inválido',\r\n                  },\r\n                })}\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Email\"\r\n              />\r\n              {errors.email && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.email.message}</p>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"sr-only\">\r\n                Senha\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                {...register('password', {\r\n                  required: 'Senha é obrigatória',\r\n                  minLength: {\r\n                    value: 6,\r\n                    message: 'A senha deve ter no mínimo 6 caracteres',\r\n                  },\r\n                })}\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Senha\"\r\n              />\r\n              {errors.password && (\r\n                <p className=\"mt-1 text-sm text-red-600\">{errors.password.message}</p>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"confirmPassword\" className=\"sr-only\">\r\n                Confirmar Senha\r\n              </label>\r\n              <input\r\n                id=\"confirmPassword\"\r\n                type=\"password\"\r\n                {...register('confirmPassword', {\r\n                  required: 'Confirmação de senha é obrigatória',\r\n                  validate: (value) =>\r\n                    value === watch('password') || 'As senhas não coincidem',\r\n                })}\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Confirmar Senha\"\r\n              />\r\n              {errors.confirmPassword && (\r\n                <p className=\"mt-1 text-sm text-red-600\">\r\n                  {errors.confirmPassword.message}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"licenseType\" className=\"sr-only\">\r\n                Tipo de Licença\r\n              </label>\r\n              <select\r\n                id=\"licenseType\"\r\n                {...register('licenseType', { required: 'Tipo de licença é obrigatório' })}\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n              >\r\n                <option value=\"basic\">Básica</option>\r\n                <option value=\"premium\">Premium</option>\r\n                <option value=\"enterprise\">Enterprise</option>\r\n              </select>\r\n              {errors.licenseType && (\r\n                <p className=\"mt-1 text-sm text-red-600\">\r\n                  {errors.licenseType.message}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n            >\r\n              Registrar\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterCompany; "],"names":["RegisterCompany","registerCompany","useAuth","navigate","useNavigate","register","handleSubmit","formState","errors","watch","useForm","defaultValues","licenseType","_jsx","className","children","_jsxs","onSubmit","async","data","password","confirmPassword","toast","error","name","email","success","htmlFor","id","type","required","placeholder","message","pattern","value","minLength","validate"],"sourceRoot":""}